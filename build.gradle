buildscript {
    ext {
        kotlinVersion = '1.3.50'
        springBootVersion = '2.2.1.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "org.springframework.boot:spring-boot-devtools:${springBootVersion}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        classpath "org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}"
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'kotlin-noarg'
apply plugin: "kotlin-jpa"
apply plugin: 'kotlin-allopen'

group 'PrestoService'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-test'
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-websocket')

    compile('org.springframework.security.oauth:spring-security-oauth2:2.2.1.RELEASE')
    compile 'org.springframework.security:spring-security-config:5.2.1.RELEASE'

    compile 'org.jetbrains.kotlin:kotlin-reflect'

    //postgres
    compile 'org.postgresql:postgresql'

    //flyway
    compile "org.flywaydb:flyway-core:5.2.4"
    runtime 'org.flywaydb:flyway-gradle-plugin:6.0.1'

    //aws
    compile 'com.amazonaws:aws-java-sdk:1.11.613'

    //firebase
    compile 'com.google.firebase:firebase-admin:6.9.0'

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    compile 'com.google.code.gson:gson:2.8.2'
    compile 'io.github.microutils:kotlin-logging:1.4.9'
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")

}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

bootJar {
    launchScript()
}

task stage(type: Copy, dependsOn: [clean, build]) {
    from jar.archivePath
    into project.rootDir
    rename {
        'app.jar'
    }
}
stage.mustRunAfter(clean)
